// <auto-generated />
using Charity.Mvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Charity.Mvc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200602192344_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Charity.Mvc.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DonationId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Charity.Mvc.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<int>("InstitutionId");

                    b.Property<DateTime>("PickUpComment");

                    b.Property<DateTime>("PickUpDate");

                    b.Property<DateTime>("PickUpTime");

                    b.Property<decimal>("Quantity");

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Charity.Mvc.Models.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("Charity.Mvc.Models.Category", b =>
                {
                    b.HasOne("Charity.Mvc.Models.Donation", "Donation")
                        .WithMany("Categories")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Charity.Mvc.Models.Donation", b =>
                {
                    b.HasOne("Charity.Mvc.Models.Institution", "Institution")
                        .WithMany("Donations")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
